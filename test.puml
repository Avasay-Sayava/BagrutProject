@startuml
class com.avasaysayava.bagrutproject.game.graphic.tileset.FloorTileSet {
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.gui.Joystick {
- float radius
- Paint innerPaint
- Paint outerPaint
# float outerX
- float X
- float innerX
- boolean enabled
- boolean inverted
+ void draw(Canvas)
# void arrange()
+ double getDistance(MotionEvent)
+ double getPercentage(MotionEvent)
+ double getRadians(MotionEvent)
+ double getAngle(MotionEvent)
+ double getSin(MotionEvent)
+ double getCos(MotionEvent)
+ double getDistance()
+ double getPercentage()
+ double getRadians()
+ double getAngle()
+ double getSin()
+ double getCos()
+ boolean isPressed(MotionEvent)
+ void enable(MotionEvent)
+ void disable()
+ boolean isEnabled()
+ void reset()
+ void press(MotionEvent)
+ void invert()
+ boolean isInverted()
+ float getRadius()
+ void move(float,float)
}


class com.avasaysayava.bagrutproject.service.BackgroundMusicService {
- MediaPlayer player
+ IBinder onBind(Intent)
+ int onStartCommand(Intent,int,int)
+ void onDestroy()
}


class com.avasaysayava.bagrutproject.game.gui.MovableJoystick {
# void arrange()
}

class com.avasaysayava.bagrutproject.activity.GameActivity {
- Game game
- Intent backgroundMusicService
# void onCreate(Bundle)
# void onStart()
# void onResume()
# void onPause()
# void onStop()
# void onDestroy()
}


class com.avasaysayava.bagrutproject.game.Game {
+ int SCALE
+ Paint textPaint
+ TileSounds tileSounds
+ PlayerTileSet playerTileSet
+ FloorTileSet floorTileSet
+ GroundTileSet groundTileSet
+ PropsTileSet propsTileSet
+ StructuresTileSet structuresTileSet
- Joystick joystick
- Player player
- GameMap map
- Bitmap vignetteBitmap
- OperationScheduler operationScheduler
- boolean debugMode
- double[] fpsGraph
- int fpsI
+ boolean onTouchEvent(MotionEvent)
+ void surfaceCreated(SurfaceHolder)
+ void surfaceChanged(SurfaceHolder,int,int,int)
+ void surfaceDestroyed(SurfaceHolder)
+ void draw(Canvas)
- void drawUPS(Canvas,Paint)
- void drawFPS(Canvas,Paint)
- int[] getGradientColor(double)
- void drawBounds(Canvas,Paint)
- void drawPlayerVelocity(Canvas,Paint)
+ void update()
+ boolean isDebug()
+ GameMap getMap()
+ OperationScheduler getOperationScheduler()
+ Joystick getJoystick()
+ void onStart()
+ void onResume()
+ void onPause()
+ void onStop()
+ void onDestroy()
+ void createOperationScheduler()
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.FloorMap {
}
class com.avasaysayava.bagrutproject.game.graphic.tileset.StructuresTileSet {
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.graphic.tileset.PlayerTileSet {
# Tile[] getTileArray()
}

enum com.avasaysayava.bagrutproject.game.audio.TileSound {
+  GRASS
+  PATH
+  FLOOR
+  WALL
+  ENTITY
+  STAIR
+ int[] sounds
}

abstract class com.avasaysayava.bagrutproject.game.entity.Entity {
# Game game
# float x
# double mass
+ void move(float,float)
+ void translate(float,float)
+ double getDistance(float,float)
+ float getX()
+ float getY()
+ {abstract}void draw(Canvas)
+ {abstract}void update()
+ {abstract}Collision getCollision()
+ {abstract}int getLeft()
+ {abstract}int getDown()
+ {abstract}Shadow getShadow()
+ {abstract}int getZ()
+ {abstract}Point getPoint()
}


class com.avasaysayava.bagrutproject.game.graphic.tileset.PropsTileSet {
# Tile[] getTileArray()
}

abstract class com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet {
- Bitmap bitmap
- Tile[] tiles
# {abstract}Tile[] getTileArray()
+ Bitmap getBitmap()
+ Tile getTile(int,int,int,int,int,int,Collision,Collision,Collision,TileSound)
+ Tile getTile(int,int,int,int,int,int,int,Collision,Collision,Collision,TileSound)
+ Tile getTile(int)
}


class com.avasaysayava.bagrutproject.activity.StartActivity {
# void onCreate(Bundle)
}

class com.avasaysayava.bagrutproject.game.thread.OperationScheduler {
- int UPS
- Game game
- SurfaceHolder surfaceHolder
- SizedDeque<Long> upsDeque
- double lastUPS
- int ups
- long t_start
+ double getAvgUPS()
+ double getAvgFPS()
+ double getFramedUPS()
+ double getFramedFPS()
# void periodic()
}


class com.avasaysayava.bagrutproject.game.structure.SizedDeque {
- int capacity
+ boolean add(E)
+ void addFirst(E)
+ void addLast(E)
+ boolean addAll(Collection<? extends E>)
+ boolean offer(E)
+ boolean offerFirst(E)
+ boolean offerLast(E)
}


class com.avasaysayava.bagrutproject.game.collision.Path {
- PointF[] points
- float dx
+ {static} Path circle(float,float,float,float)
+ {static} Path polygon(PointF)
+ LineF getIntersector(Path)
+ void translate(float,float)
+ void draw(Canvas,Paint,int)
+ void move(float,float)
+ PointF[] getPoints()
}


class com.avasaysayava.bagrutproject.game.collision.Collision {
+ {static} Collision empty
- Path[] paths
+ LineF getIntersector(Collision)
+ void move(float,float)
+ void translate(float,float)
+ void draw(Canvas,Paint,int)
+ Path[] getPaths()
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.PropsMap {
}
class com.avasaysayava.bagrutproject.game.audio.TileSounds {
- HashMap<TileSound,MediaPlayer[]> soundMap
+ MediaPlayer[] getSounds(TileSound)
}


class com.avasaysayava.bagrutproject.game.util.Util {
+ {static} double random(double,double)
+ {static} double random(double)
+ {static} boolean within(double,double,double)
+ {static} boolean between(double,double,double)
+ {static} int withAlpha(int,int)
+ {static} boolean isCounterClockWise(PointF,PointF,PointF)
+ {static} boolean doesIntersect(PointF,PointF,PointF,PointF)
+ {static} void timeout(long)
+ {static} Bitmap generateVignette(int,int)
+ {static} Uri ResIdToUri(Context,int)
+ {static} T randomElement(T[])
}

class com.avasaysayava.bagrutproject.game.util.LineF {
}
abstract class com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap {
+ int TILE_SIZE
# List<Tile>[][] map
# Game game
# float x
+ void move(float,float)
+ void translate(float,float)
+ void draw(Canvas,Entity)
- int getEvaluation(Object,Object)
- Prioritised getPrioritised(Object)
+ LineF getIntersector(Entity)
+ List<Tile> getTiles(int,int)
+ float getX()
+ float getY()
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap$Prioritised {
+ int z
+ int down
+ int left
+ int x
+ int y
}

class com.avasaysayava.bagrutproject.game.graphic.gamemap.GroundMap {
}
class com.avasaysayava.bagrutproject.game.graphic.gamemap.StructuresMap {
}
class com.avasaysayava.bagrutproject.activity.MainMenuActivity {
# void onCreate(Bundle)
}

class com.avasaysayava.bagrutproject.game.entity.Shadow {
- Tile tile
- Entity entity
+ void draw(Canvas)
+ void update()
+ Collision getCollision()
+ int getLeft()
+ int getDown()
+ Shadow getShadow()
+ int getZ()
+ Point getPoint()
}


class com.avasaysayava.bagrutproject.game.graphic.tileset.GroundTileSet {
# Tile[] getTileArray()
}

abstract class com.avasaysayava.bagrutproject.game.thread.PeriodicThread {
- boolean running
+ void start()
+ void run()
+ void pause()
# {abstract}void periodic()
}


class com.avasaysayava.bagrutproject.game.graphic.Tile {
+ {static} Tile empty
# int id
# int z
# int down
# int scale
# TileSound type
# TileSet tileSet
# Rect bounds
# Collision collision
# Collision collisionTop
# Collision collisionDown
+ void draw(Canvas,float,float,Paint)
+ void draw(Canvas,float,float,double,double,Paint)
+ LineF getIntersector(Entity)
+ void move(float,float)
+ int getWidth()
+ int getHeight()
+ TileSet getTileSet()
+ Rect getBounds()
+ int getScale()
+ Collision getCollision()
+ Collision getCollisionTop()
+ Collision getCollisionDown()
+ int getDown()
+ int getLeft()
+ int getZ()
+ TileSound getType()
+ Tile withScale(int)
+ Tile withZ(int)
+ int getId()
+ void setId(int)
}


class com.avasaysayava.bagrutproject.game.entity.Player {
- float maxSpeed
- Shadow shadow
- Collision collision
- double wobble
- double Vx
- double angle
- int z
- int lastId
- boolean playSound
+ void draw(Canvas)
+ double getSpeed()
- void updateVelocity(double,double)
+ void update()
- double getPreferredSpeed()
+ Collision getCollision()
+ int getLeft()
+ int getDown()
+ Shadow getShadow()
+ int getZ()
+ Point getPoint()
+ double getVx()
+ double getVy()
- Point getPositionOnMap(GameMap)
}




com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.FloorTileSet
android.app.Service <|-- com.avasaysayava.bagrutproject.service.BackgroundMusicService
com.avasaysayava.bagrutproject.game.gui.Joystick <|-- com.avasaysayava.bagrutproject.game.gui.MovableJoystick
android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.GameActivity
com.avasaysayava.bagrutproject.game.Callback <|.. com.avasaysayava.bagrutproject.game.Game
android.view.SurfaceView <|-- com.avasaysayava.bagrutproject.game.Game
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.FloorMap
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.StructuresTileSet
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.PlayerTileSet
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.PropsTileSet
android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.StartActivity
com.avasaysayava.bagrutproject.game.thread.PeriodicThread <|-- com.avasaysayava.bagrutproject.game.thread.OperationScheduler
java.util.ArrayDeque <|-- com.avasaysayava.bagrutproject.game.structure.SizedDeque
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.PropsMap
android.util.Pair <|-- com.avasaysayava.bagrutproject.game.util.LineF
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap +.. com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap$Prioritised
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.GroundMap
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.StructuresMap
android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.MainMenuActivity
com.avasaysayava.bagrutproject.game.entity.Entity <|-- com.avasaysayava.bagrutproject.game.entity.Shadow
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.GroundTileSet
com.avasaysayava.bagrutproject.game.thread.Thread <|-- com.avasaysayava.bagrutproject.game.thread.PeriodicThread
com.avasaysayava.bagrutproject.game.entity.Entity <|-- com.avasaysayava.bagrutproject.game.entity.Player
@enduml