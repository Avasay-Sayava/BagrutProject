@startuml
class com.avasaysayava.bagrutproject.activity.CreditsActivity {
- Button btn_back
- MediaPlayer click
# void onCreate(Bundle)
}


class com.avasaysayava.bagrutproject.database.DatabaseHelper {
- {static} String DATABASE_NAME
- {static} int DATABASE_VERSION
- {static} String SQL_CREATE_ENTRIES
- {static} String SQL_DELETE_ENTRIES
+ <<Create>> DatabaseHelper(Context)
+ void onCreate(SQLiteDatabase)
+ void onUpgrade(SQLiteDatabase,int,int)
}


class com.avasaysayava.bagrutproject.game.graphic.tileset.GlyphFloorTileSet {
+ <<Create>> GlyphFloorTileSet(Context)
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.gui.MovableJoystick {
+ <<Create>> MovableJoystick(Level,float,float,float)
# void arrange()
+ void enable(MotionEvent)
}

abstract class com.avasaysayava.bagrutproject.database.datasource.DataSource {
# DatabaseHelper databaseHelper
# Context context
# SQLiteDatabase database
+ <<Create>> DataSource(Context)
+ void openWriteable()
+ void openReadable()
+ void close()
}


class com.avasaysayava.bagrutproject.activity.MenuActivity {
- Button[] levels
- int currentLevel
- Button btn_play
- Leaderboard leaderboard
- TimesDataSource timesDataSource
- ScrollView scroll_ranks
- LevelPreview sv_level_preview
- MediaPlayer click
- TextView txt_level_title
# void onCreate(Bundle)
+ void previewMap(int)
- void loadLeaderboard()
# void onResume()
# void onStart()
# void onDestroy()
# void onStop()
# void onPause()
}


class com.avasaysayava.bagrutproject.util.struct.LineF {
+ <<Create>> LineF(PointF,PointF)
}

class com.avasaysayava.bagrutproject.game.entity.Player {
- float MAX_SPEED
- Shadow shadow
- Collision collision
- double wobble
- double Vx
- double angle
- int lastId
- boolean playSound
+ <<Create>> Player(Level,float,float,int)
+ void draw(Canvas)
+ double getSpeed()
- void updateVelocity(double,double)
+ void update()
- double getPreferredSpeed()
+ Collision getCollision()
+ int getLeft()
+ int getDown()
+ Shadow getShadow()
+ Point getCords()
+ double getVx()
+ double getVy()
- Point getCordsOnMap(GameMap)
}


class com.avasaysayava.bagrutproject.game.Level {
- Player player
- double[] fpsGraph
- GameMap map
- Joystick joystick
- Bitmap vignetteBitmap
- boolean debugMode
- JobScheduler jobScheduler
- int fpsIndex
- long t_total
+ <<Create>> Level(Context)
+ <<Create>> Level(Context,AttributeSet)
+ <<Create>> Level(Context,AttributeSet,int)
+ <<Create>> Level(Context,AttributeSet,int,int)
+ boolean onTouchEvent(MotionEvent)
+ void surfaceCreated(SurfaceHolder)
+ void surfaceChanged(SurfaceHolder,int,int,int)
+ void surfaceDestroyed(SurfaceHolder)
+ void draw(Canvas)
- void drawUPS(Canvas,Paint)
- void drawFPS(Canvas,Paint)
- int[] getGradientColor(double)
- void drawBounds(Canvas,Paint)
- void drawPlayerVelocity(Canvas,Paint)
+ void update()
+ boolean isDebug()
+ GameMap getMap()
+ JobScheduler getJobScheduler()
+ Joystick getJoystick()
+ void onStart()
+ void onResume()
+ void onPause()
+ void onStop()
+ void onDestroy()
- void createJobScheduler()
- void createJoystick()
+ boolean isPaused()
+ void pause()
+ void resume()
+ void toggleDebug()
+ void toggleGraph()
+ boolean isGraph()
+ void onCompleted()
+ void loadMap(GameMap)
}


class com.avasaysayava.bagrutproject.game.property.StairUpProperty {
+ <<Create>> StairUpProperty(Game,GameMap,Tile,int,int)
+ void update(Entity)
+ Tile getTile()
}

class com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.GroundMap {
+ <<Create>> GroundMap(Game,float,float)
}

abstract class com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.DebugMap {
+ <<Create>> DebugMap(Game,List<Tile>[][],int,float,float)
}

class com.avasaysayava.bagrutproject.activity.LevelActivity {
- Level sv_level
- int levelNumber
- Intent backgroundMusicService
- TimesDataSource timesDataSource
- ImageButton img_btn_play
- MediaPlayer click
# void onCreate(Bundle)
- void resumeLevel()
- void pauseLevel()
- void showLeaveDialog()
# void onStart()
# void onResume()
# void onPause()
# void onStop()
# void onDestroy()
+ void onBackPressed()
+ void onCompleted(long)
- void showTimeDialog(long,long,boolean)
}


abstract class com.avasaysayava.bagrutproject.game.entity.Entity {
# Level level
# float x
# int z
# double mass
- int glyphs
+ <<Create>> Entity(Level,double,float,float,int)
+ void move(float,float)
+ void translate(float,float)
+ float getX()
+ float getY()
+ void addGlyphs(int)
+ int getGlyphs(int)
+ {abstract}void draw(Canvas)
+ {abstract}void update()
+ {abstract}Collision getCollision()
+ {abstract}int getLeft()
+ {abstract}int getDown()
+ {abstract}Shadow getShadow()
+ int getZ()
+ void setZ(int)
+ {abstract}Point getCords()
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap {
+ int TILE_SIZE
# List<Layer> layers
# List<Tile>[][] map
# Game game
# float x
- int glyphs
+ <<Create>> GameMap(Game,List<Tile>[][],int,float,float)
+ <<Create>> GameMap(Game,List<Tile>[][],List<Layer>,int,float,float)
+ {static} int getEvaluation(Object,Object,GameMap)
- {static} Prioritised getPrioritised(Object,GameMap)
- void generateLayers(List<Tile>[][])
- int getMaxZ()
- Layer generateLayer(List<Tile>[][],int)
+ Game getGame()
+ void setGame(Game)
+ void arrange()
+ void move(float,float)
+ void translate(float,float)
+ void update(Entity)
+ void draw(Canvas,Entity)
+ LineF getIntersector(Entity)
+ List<Tile> getTiles(int,int)
+ List<Tile> getTiles(int,int,int)
+ float getX()
+ float getY()
+ int getColumns()
+ int getRows()
+ List<Layer> getLayers()
+ void clear()
+ void prepare()
+ void addGlyphs(int)
+ void removeGlyphs(int)
+ void onNoGlyphs()
+ List<Tile>[][] getMap()
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.Prioritised {
+ int z
+ int down
+ int left
+ int x
+ int y
}

class com.avasaysayava.bagrutproject.game.thread.JobScheduler {
- int UPS
- Game game
- SizedDeque<Long> upsDeque
- double lastUPS
- int updates
- long t_start
+ <<Create>> JobScheduler(Game,int)
+ double getAvgUPS()
+ double getAvgFPS()
+ double getFramedUPS()
+ double getFramedFPS()
# void periodic()
}


class com.avasaysayava.bagrutproject.activity.HowToPlayActivity {
- Button btn_back
- MediaPlayer click
# void onCreate(Bundle)
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.StructuresMap {
+ <<Create>> StructuresMap(Game,float,float)
}

abstract class com.avasaysayava.bagrutproject.game.Game {
+ int SCALE
+ Paint textPaint
+ TileSoundPreloader tileSoundPreloader
+ TileSet playerTileSet
# LongConsumer onCompleteListener
+ <<Create>> Game(Context,int,int,Paint)
+ <<Create>> Game(Context,AttributeSet,int,int,Paint)
+ <<Create>> Game(Context,AttributeSet,int,int,int,Paint)
+ <<Create>> Game(Context,AttributeSet,int,int,int,int,Paint)
+ {abstract}void surfaceChanged(SurfaceHolder,int,int,int)
+ {abstract}void surfaceCreated(SurfaceHolder)
+ {abstract}void surfaceDestroyed(SurfaceHolder)
+ void setOnCompleteListener(LongConsumer)
+ {abstract}void update()
+ {abstract}void onStart()
+ {abstract}void onResume()
+ {abstract}void onPause()
+ {abstract}void onStop()
+ {abstract}void onDestroy()
+ {abstract}boolean isDebug()
+ {abstract}boolean isGraph()
+ {abstract}void onCompleted()
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.WallsMap {
+ <<Create>> WallsMap(Game,float,float)
}

class com.avasaysayava.bagrutproject.game.graphic.tileset.GroundTileSet {
+ <<Create>> GroundTileSet(Context)
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.LevelPreview {
- GameMap map
- Bitmap vignetteBitmap
+ <<Create>> LevelPreview(Context)
+ <<Create>> LevelPreview(Context,AttributeSet)
+ <<Create>> LevelPreview(Context,AttributeSet,int)
+ <<Create>> LevelPreview(Context,AttributeSet,int,int)
+ void surfaceCreated(SurfaceHolder)
+ void surfaceChanged(SurfaceHolder,int,int,int)
+ void surfaceDestroyed(SurfaceHolder)
- void loadMap()
+ void draw(Canvas)
+ void update()
+ void onStart()
+ void onResume()
+ void onPause()
+ void onStop()
+ void onDestroy()
+ boolean isDebug()
+ boolean isGraph()
+ void onCompleted()
+ void loadMap(GameMap)
}


class com.avasaysayava.bagrutproject.leaderboard.Leaderboard {
- List<RelativeLayout> rows
- RelativeLayout marked
+ <<Create>> Leaderboard(Context)
+ <<Create>> Leaderboard(Context,AttributeSet)
+ <<Create>> Leaderboard(Context,AttributeSet,int)
+ <<Create>> Leaderboard(Context,AttributeSet,int,int)
- void add(String)
- void offer(String,int)
+ void update()
+ void clear()
- void updateRanks()
- void mark(RelativeLayout)
- void unmark(RelativeLayout)
+ void markTime(String)
+ void loadLevel(TimesDataSource,int)
+ int getMarkedY()
+ boolean isLoaded()
}


abstract class com.avasaysayava.bagrutproject.game.property.Property {
# Game game
# GameMap map
# int x
# Tile parent
+ <<Create>> Property(Game,GameMap,Tile,int,int)
+ {abstract}void update(Entity)
+ {abstract}Tile getTile()
}


class com.avasaysayava.bagrutproject.util.Util {
+ {static} boolean within(double,double,double)
+ {static} boolean between(double,double,double)
+ {static} double bound(double,double,double)
+ {static} int bound(int,int,int)
+ {static} int withAlpha(int,int)
+ {static} boolean isCounterClockwise(PointF,PointF,PointF)
+ {static} boolean doesIntersect(PointF,PointF,PointF,PointF)
+ {static} Bitmap generateVignette(int,int)
+ {static} T randomElement(T[])
+ {static} String timeToString(long)
+ {static} long stringToTime(String)
+ {static} GameMap getMap(Game,int)
}

class com.avasaysayava.bagrutproject.game.collision.Path {
- PointF[] points
- float dx
+ <<Create>> Path(PointF)
+ {static} Path polygon(PointF)
+ LineF getIntersector(Path)
+ void draw(Canvas,Paint,int)
+ void move(float,float)
+ PointF[] getPoints()
}


class com.avasaysayava.bagrutproject.game.audio.TileSoundPreloader {
- HashMap<TileSound,MediaPlayer[]> soundMap
+ <<Create>> TileSoundPreloader(Context)
+ MediaPlayer[] getSounds(TileSound)
}


class com.avasaysayava.bagrutproject.game.property.GlyphStoneProperty {
+ {static} int GLYPH_GOAL
- int glyphs
- Tile tile
+ <<Create>> GlyphStoneProperty(Game,GameMap,Tile,int,int)
+ void update(Entity)
+ Tile getTile()
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.Level1Map {
+ <<Create>> Level1Map(Game)
}

class com.avasaysayava.bagrutproject.game.property.StairDownProperty {
+ <<Create>> StairDownProperty(Game,GameMap,Tile,int,int)
+ void update(Entity)
+ Tile getTile()
}

class com.avasaysayava.bagrutproject.activity.StartActivity {
- RadioGroup rg_options_menu
- Button btn_go
- MediaPlayer click
# void onCreate(Bundle)
}


class com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.GlyphFloorMap {
+ <<Create>> GlyphFloorMap(Game,float,float)
}

class com.avasaysayava.bagrutproject.service.BackgroundMusicService {
- MediaPlayer player
+ IBinder onBind(Intent)
+ int onStartCommand(Intent,int,int)
+ void onDestroy()
}


abstract class com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet {
- Bitmap bitmap
- Tile[] tiles
+ <<Create>> TileSet(Context,int)
# {abstract}Tile[] getTileArray()
+ Bitmap getBitmap()
+ Tile getTile(int,int,int,int,int,int,Collision,Collision,Collision,TileSound)
+ Tile getTile(int,int,int,int,int,int,int,Collision,Collision,Collision,TileSound)
+ Tile getTile(int)
}


class com.avasaysayava.bagrutproject.game.graphic.tileset.WallsTileSet {
+ <<Create>> WallsTileSet(Context)
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.entity.Shadow {
- Tile tile
- Entity entity
+ <<Create>> Shadow(Level,Entity,Tile)
+ void draw(Canvas)
+ void update()
+ Collision getCollision()
+ int getLeft()
+ int getDown()
+ Shadow getShadow()
+ int getZ()
+ void setZ(int)
+ Point getCords()
}


class com.avasaysayava.bagrutproject.game.property.GlyphProperty {
- Tile tile
+ <<Create>> GlyphProperty(Game,GameMap,Tile,int,int)
+ void update(Entity)
+ Tile getTile()
}


class com.avasaysayava.bagrutproject.game.Constants {
+ {static} int LEVEL_UPS
+ {static} int LEVEL_SCALE
+ {static} int PREVIEW_UPS
+ {static} int PREVIEW_SCALE
}

class com.avasaysayava.bagrutproject.game.collision.Collision {
+ {static} Collision empty
- Path[] paths
+ <<Create>> Collision(Path)
+ LineF getIntersector(Collision)
+ void move(float,float)
+ void draw(Canvas,Paint,int)
+ Path[] getPaths()
}


class com.avasaysayava.bagrutproject.game.graphic.tileset.PlayerTileSet {
+ <<Create>> PlayerTileSet(Context)
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.graphic.tileset.FloorTileSet {
+ <<Create>> FloorTileSet(Context)
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.FloorMap {
+ <<Create>> FloorMap(Game,float,float)
}

class com.avasaysayava.bagrutproject.game.graphic.gamemap.Layer {
- int z
- GameMap gameMap
- List<Tile>[][] map
- float x
+ <<Create>> Layer(GameMap,List<Tile>[][],int)
+ void arrange()
+ void draw(Canvas,Entity)
+ int getZ()
+ void prepare(float,float)
+ void update(Entity)
+ List<Tile> getTiles(int,int)
+ void move(float,float)
+ void translate(float,float)
}


class com.avasaysayava.bagrutproject.database.DatabaseContract {
}
class com.avasaysayava.bagrutproject.database.TimesEntry {
+ {static} String TABLE_NAME
+ {static} String COLUMN_TIME
+ {static} String COLUMN_LEVEL
}

class com.avasaysayava.bagrutproject.util.struct.SizedDeque {
- int CAPACITY
+ <<Create>> SizedDeque(int)
+ boolean add(E)
+ void addFirst(E)
+ void addLast(E)
+ boolean addAll(Collection<? extends E>)
+ boolean offer(E)
+ boolean offerFirst(E)
+ boolean offerLast(E)
}


enum com.avasaysayava.bagrutproject.game.audio.TileSound {
+  GRASS
+  PATH
+  FLOOR
+  WALL
+  ENTITY
+  GLYPH
+  STAIR
+ int[] sounds
~ <<Create>> TileSound(int)
}


class com.avasaysayava.bagrutproject.game.graphic.Tile {
+ {static} Tile empty
- int z
- int down
- int scale
- TileSound type
- TileSet tileSet
- Rect bounds
- Collision collision
- Collision collisionTop
- Collision collisionDown
- Property property
- int id
- boolean drawnLazy
+ <<Create>> Tile(Tile)
- <<Create>> Tile(Tile,int,int)
+ <<Create>> Tile(TileSet,Rect,Collision,Collision,Collision,int,int,TileSound)
+ Property getProperty()
+ void setProperty(Property)
+ void draw(Canvas,float,float,Paint)
+ void draw(Canvas,float,float,double,double,Paint)
+ LineF getIntersector(Entity)
+ void move(float,float)
+ int getWidth()
+ int getHeight()
+ TileSet getTileSet()
+ Rect getBounds()
+ int getScale()
+ Collision getCollision()
+ Collision getCollisionTop()
+ Collision getCollisionDown()
+ int getDown()
+ int getLeft()
+ int getZ()
+ TileSound getType()
+ Tile withScale(int)
+ Tile withZ(int)
+ int getId()
+ void setId(int)
+ void setDrawnLazy(boolean)
+ boolean getDrawnLazy()
+ Tile clone()
}


class com.avasaysayava.bagrutproject.database.datasource.TimesDataSource {
- String PREFS_NAME
+ <<Create>> TimesDataSource(Context)
+ Long getBestTime(int)
+ List<Long> getAllTimes(int)
+ Long getLastTime(int)
+ void setLastTime(long,int)
+ void addTime(long,int)
}


class com.avasaysayava.bagrutproject.game.gui.Joystick {
- float radius
- Paint innerPaint
- Paint outerPaint
- float X
# float outerX
# float innerX
- boolean enabled
+ <<Create>> Joystick(Level,float,float,float)
+ void draw(Canvas)
# void arrange()
+ double getDistance(MotionEvent)
+ double getDistance()
+ double getPercentage()
+ double getRadians()
+ double getAngle()
+ double getSin()
+ double getCos()
+ boolean isPressed(MotionEvent)
+ void enable(MotionEvent)
+ void disable()
+ boolean isEnabled()
+ void reset()
+ void press(MotionEvent)
+ float getRadius()
}


class com.avasaysayava.bagrutproject.game.graphic.tileset.StructuresTileSet {
+ <<Create>> StructuresTileSet(Context)
# Tile[] getTileArray()
}

class com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.Level2Map {
+ <<Create>> Level2Map(Game)
}

abstract class com.avasaysayava.bagrutproject.game.thread.PeriodicThread {
- boolean running
+ <<Create>> PeriodicThread()
+ void start()
+ void run()
+ void pause()
# {abstract}void periodic()
}


abstract class com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.LevelMap {
# <<Create>> LevelMap(Game,List<Tile>[][],int,float,float)
}



android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.CreditsActivity
android.database.sqlite.SQLiteOpenHelper <|-- com.avasaysayava.bagrutproject.database.DatabaseHelper
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.GlyphFloorTileSet
com.avasaysayava.bagrutproject.game.gui.Joystick <|-- com.avasaysayava.bagrutproject.game.gui.MovableJoystick
android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.MenuActivity
android.util.Pair <|-- com.avasaysayava.bagrutproject.util.struct.LineF
com.avasaysayava.bagrutproject.game.entity.Entity <|-- com.avasaysayava.bagrutproject.game.entity.Player
com.avasaysayava.bagrutproject.game.Game <|-- com.avasaysayava.bagrutproject.game.Level
com.avasaysayava.bagrutproject.game.property.Property <|-- com.avasaysayava.bagrutproject.game.property.StairUpProperty
com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.DebugMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.GroundMap
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.DebugMap
android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.LevelActivity
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap +. com.avasaysayava.bagrutproject.game.graphic.gamemap.Prioritised
com.avasaysayava.bagrutproject.game.thread.PeriodicThread <|-- com.avasaysayava.bagrutproject.game.thread.JobScheduler
android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.HowToPlayActivity
com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.DebugMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.StructuresMap
android.view.Callback <|.. com.avasaysayava.bagrutproject.game.Game
android.view.SurfaceHolder +. android.view.Callback
android.view.SurfaceView <|-- com.avasaysayava.bagrutproject.game.Game
com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.DebugMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.WallsMap
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.GroundTileSet
com.avasaysayava.bagrutproject.game.Game <|-- com.avasaysayava.bagrutproject.game.LevelPreview
android.widget.LinearLayout <|-- com.avasaysayava.bagrutproject.leaderboard.Leaderboard
com.avasaysayava.bagrutproject.game.property.Property <|-- com.avasaysayava.bagrutproject.game.property.GlyphStoneProperty
com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.LevelMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.Level1Map
com.avasaysayava.bagrutproject.game.property.Property <|-- com.avasaysayava.bagrutproject.game.property.StairDownProperty
android.app.Activity <|-- com.avasaysayava.bagrutproject.activity.StartActivity
com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.DebugMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.GlyphFloorMap
android.app.Service <|-- com.avasaysayava.bagrutproject.service.BackgroundMusicService
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.WallsTileSet
com.avasaysayava.bagrutproject.game.entity.Entity <|-- com.avasaysayava.bagrutproject.game.entity.Shadow
com.avasaysayava.bagrutproject.game.property.Property <|-- com.avasaysayava.bagrutproject.game.property.GlyphProperty
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.PlayerTileSet
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.FloorTileSet
com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.DebugMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.debugmap.FloorMap
com.avasaysayava.bagrutproject.database.DatabaseContract +.. com.avasaysayava.bagrutproject.database.TimesEntry
android.provider.BaseColumns <|.. com.avasaysayava.bagrutproject.database.TimesEntry
java.util.ArrayDeque <|-- com.avasaysayava.bagrutproject.util.struct.SizedDeque
com.avasaysayava.bagrutproject.database.datasource.DataSource <|-- com.avasaysayava.bagrutproject.database.datasource.TimesDataSource
com.avasaysayava.bagrutproject.game.graphic.tileset.TileSet <|-- com.avasaysayava.bagrutproject.game.graphic.tileset.StructuresTileSet
com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.LevelMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.Level2Map
java.lang.Thread <|-- com.avasaysayava.bagrutproject.game.thread.PeriodicThread
com.avasaysayava.bagrutproject.game.graphic.gamemap.GameMap <|-- com.avasaysayava.bagrutproject.game.graphic.gamemap.levelmap.LevelMap
@enduml